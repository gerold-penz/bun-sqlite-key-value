"use strict";(self.webpackChunkbun_sqlite_key_value_docs=self.webpackChunkbun_sqlite_key_value_docs||[]).push([[178],{5718:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"extended_database_topics/database_transactions","title":"Database Transactions","description":"Transactions can be used to combine several database statements.","source":"@site/docs/300_extended_database_topics/020_database_transactions.md","sourceDirName":"300_extended_database_topics","slug":"/extended_database_topics/database_transactions","permalink":"/bun-sqlite-key-value/extended_database_topics/database_transactions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Multiple Databases","permalink":"/bun-sqlite-key-value/extended_database_topics/multiple_databases"},"next":{"title":"SQLite as base for a key value storage","permalink":"/bun-sqlite-key-value/extended_database_topics/sqlite_base"}}');var s=a(4848),o=a(8453);const r={},i="Database Transactions",c={},d=[{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"database-transactions",children:"Database Transactions"})}),"\n",(0,s.jsxs)(t.p,{children:["Transactions can be used to combine several database statements.\nThese combined database statements are processed much faster than\nif they were executed individually.\nThe more database statements are combined, the greater the speed advantage.\nYou can find more infos in the\n",(0,s.jsx)(t.a,{href:"https://bun.sh/docs/api/sqlite#transactions",children:"Bun documentation"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'import { BunSqliteKeyValue } from "bun-sqlite-key-value"\n\nconst store = new BunSqliteKeyValue()\n\nstore.db.transaction(() => {\n    store.set("key1", "100")\n    store.set("key2", "200")\n    store.set("key3", "300")\n})()\n\nstore.db.transaction(() => {\n    const value1 = store.get("key1")\n    const value2 = store.get("key2")\n    const value3 = store.get("key3")\n    const total = value1 + value2 + value3\n    store.set("total1", total)\n})()\n'})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>i});var n=a(6540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);