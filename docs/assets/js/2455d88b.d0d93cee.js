"use strict";(self.webpackChunkbun_sqlite_key_value_docs=self.webpackChunkbun_sqlite_key_value_docs||[]).push([[8081],{4993:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"hash_map_object/get_all_values","title":"Hash - Get All Values","description":"Returns the values contained in the hash stored at key.","source":"@site/docs/120_hash_map_object/080_get_all_values.md","sourceDirName":"120_hash_map_object","slug":"/hash_map_object/get_all_values","permalink":"/bun-sqlite-key-value/hash_map_object/get_all_values","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":80,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hash - Get All Field Names","permalink":"/bun-sqlite-key-value/hash_map_object/get_all_field_names"},"next":{"title":"Hash - Delete Field","permalink":"/bun-sqlite-key-value/hash_map_object/delete_field"}}');var n=s(4848),l=s(8453);const r={},o="Hash - Get All Values",i={},c=[{value:"key",id:"key",level:2},{value:"Example",id:"example",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"hash---get-all-values",children:"Hash - Get All Values"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"hGetValues(key: string)\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Returns the values contained in the hash stored at ",(0,n.jsx)(t.code,{children:"key"}),".\nUse ",(0,n.jsx)(t.code,{children:"hmGet()"})," to read field names and values."]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["Do not use the hash functions with several very large amounts (megabytes) of data or blobs.\nThis is because the entire data record with all fields is always read and written.\nIt is better to use ",(0,n.jsx)(t.code,{children:"setValues()"})," and ",(0,n.jsx)(t.code,{children:"getValues()"})," for large amounts of data."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Inspired by: ",(0,n.jsx)(t.a,{href:"https://docs.keydb.dev/docs/commands/#hvals",children:"https://docs.keydb.dev/docs/commands/#hvals"})]}),"\n",(0,n.jsx)(t.h2,{id:"key",children:"key"}),"\n",(0,n.jsx)(t.p,{children:"The key must be a string."}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-TypeScript",children:'import { BunSqliteKeyValue } from "bun-sqlite-key-value"\n\nconst store = new BunSqliteKeyValue()\n\nstore.hmSet("key-1", {\n    "field-1": "value-1",\n    "field-2": "value-2"\n})\nstore.hGetValues("key-1") // --\x3e ["value-1", "value-2"]\n'})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var a=s(6540);const n={},l=a.createContext(n);function r(e){const t=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);