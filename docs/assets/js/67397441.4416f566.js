"use strict";(self.webpackChunkbun_sqlite_key_value_docs=self.webpackChunkbun_sqlite_key_value_docs||[]).push([[9666],{1213:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"hash_map_object/read_value","title":"Hash - Read Value","description":"First the","source":"@site/docs/120_hash_map_object/020_read_value.md","sourceDirName":"120_hash_map_object","slug":"/hash_map_object/read_value","permalink":"/bun-sqlite-key-value/hash_map_object/read_value","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hash - Write Value","permalink":"/bun-sqlite-key-value/hash_map_object/write_value"},"next":{"title":"Hash - Write Multiple Values","permalink":"/bun-sqlite-key-value/hash_map_object/write_multiple_values"}}');var a=n(4848),r=n(8453);const l={},i="Hash - Read Value",d={},o=[{value:"key",id:"key",level:2},{value:"field",id:"field",level:2},{value:"Example",id:"example",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"hash---read-value",children:"Hash - Read Value"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"hGet(key: string, field: string)\n"})}),"\n",(0,a.jsxs)(t.p,{children:["First the\n",(0,a.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"JavaScript Map Object"}),"\nis read from the database.\nIf the data record (marked with ",(0,a.jsx)(t.code,{children:"key"}),") does not exist, ",(0,a.jsx)(t.code,{children:"undefined"})," is returned.\nIf the field (marked with ",(0,a.jsx)(t.code,{children:"field"}),') does not exist in the "Map Object", ',(0,a.jsx)(t.code,{children:"undefined"})," is returned."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Do not use the hash functions with several very large amounts (megabytes) of data or blobs.\nThis is because the entire data record with all fields is always read and written.\nIt is better to use ",(0,a.jsx)(t.code,{children:"setValues()"})," and ",(0,a.jsx)(t.code,{children:"getValues()"})," for large amounts of data."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Inspired by: ",(0,a.jsx)(t.a,{href:"https://docs.keydb.dev/docs/commands/#hget",children:"https://docs.keydb.dev/docs/commands/#hget"})]}),"\n",(0,a.jsx)(t.h2,{id:"key",children:"key"}),"\n",(0,a.jsx)(t.p,{children:"The key must be a string."}),"\n",(0,a.jsx)(t.h2,{id:"field",children:"field"}),"\n",(0,a.jsx)(t.p,{children:"The field name must be a string."}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import { BunSqliteKeyValue } from "bun-sqlite-key-value"\n\nconst store = new BunSqliteKeyValue()\n\nstore.hSet("key-1", "field-1", "value-1")\n\nstore.hGet("key-1", "field-1") // --\x3e "value-1"\nstore.hGet("key-1", "field-2") // --\x3e undefined\n'})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var s=n(6540);const a={},r=s.createContext(a);function l(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);