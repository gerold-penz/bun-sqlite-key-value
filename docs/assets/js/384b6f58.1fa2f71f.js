"use strict";(self.webpackChunkbun_sqlite_key_value_docs=self.webpackChunkbun_sqlite_key_value_docs||[]).push([[9599],{5208:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"string/append","title":"Append","description":"If key already exists, this command appends the value at the end of the string.","source":"@site/docs/110_string/010_append.md","sourceDirName":"110_string","slug":"/string/append","permalink":"/bun-sqlite-key-value/string/append","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"String","permalink":"/bun-sqlite-key-value/category/string"},"next":{"title":"Hash (JavaScript Map)","permalink":"/bun-sqlite-key-value/category/hash-javascript-map"}}');var i=n(4848),a=n(8453);const r={},l="Append",d={},o=[{value:"key",id:"key",level:2},{value:"value",id:"value",level:2},{value:"ttlMs (optional)",id:"ttlms-optional",level:2},{value:"Example",id:"example",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"append",children:"Append"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"append(key: string, value: string, ttlMs?: number): number\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If key already exists, this command appends the value at the end of the string.\nIf key does not exist it is created and set as an empty string,\nso ",(0,i.jsx)(t.code,{children:"append()"})," will be similar to ",(0,i.jsx)(t.code,{children:"set()"})," in this special case.\nInspired by: ",(0,i.jsx)(t.a,{href:"https://docs.keydb.dev/docs/commands/#append",children:"https://docs.keydb.dev/docs/commands/#append"})]}),"\n",(0,i.jsx)(t.p,{children:"Returns the length of the string after the append operation."}),"\n",(0,i.jsx)(t.h2,{id:"key",children:"key"}),"\n",(0,i.jsx)(t.p,{children:"The key must be a string."}),"\n",(0,i.jsx)(t.h2,{id:"value",children:"value"}),"\n",(0,i.jsx)(t.p,{children:"The string that is appended to the existing string."}),"\n",(0,i.jsx)(t.h2,{id:"ttlms-optional",children:"ttlMs (optional)"}),"\n",(0,i.jsx)(t.p,{children:'"Time to live" in milliseconds. After this time,\nthe item becomes invalid and is deleted from the database\nthe next time it is accessed or when the application is started.\nSet the value to 0 if you want to explicitly deactivate the process.'}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'import { BunSqliteKeyValue } from "bun-sqlite-key-value"\n\nconst store = new BunSqliteKeyValue()\n\nstore.append("my-key", "Hello!") // --\x3e 6\nstore.append("my-key", "World!") // --\x3e 12 \nstore.get("my-key") // --\x3e "Hello!World!"\n'})})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);